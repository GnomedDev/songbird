window.SIDEBAR_ITEMS = {"enum":[["AudioStreamError","Errors encountered when creating an `AudioStream` or requesting metadata from a `Compose`."],["AuxMetadataError","Errors encountered when trying to access out-of-band `AuxMetadata` for an `Input` or `Compose`."],["Input","An audio source, which can be live or lazily initialised."],["LiveInput","An initialised audio source."],["MakePlayableError","Errors encountered when readying or pre-processing an `Input`."],["MetadataError","Errors encountered when trying to access in-stream `Metadata` for an `Input`."]],"mod":[["cached","In-memory, shared input sources for reuse between calls, fast seeking, and direct Opus frame passthrough."],["codecs","Codec registries extending Symphonia’s probe and registry formats with Opus and DCA support."],["utils","Utility methods for seeking or decoding."]],"struct":[["AsyncAdapterStream","An adapter for converting an async media source into a synchronous one usable by symphonia."],["AudioStream","An unread byte stream for an audio file."],["AuxMetadata","Extra information about an `Input` which is acquired without parsing the file itself (e.g., from a webpage)."],["ChildContainer","Handle for a child process which ensures that any subprocesses are properly closed on drop."],["File","A lazily instantiated local file."],["HttpRequest","A lazily instantiated HTTP request."],["Metadata","In-stream information about an `Input` acquired by parsing an audio file."],["Parsed","An audio file which has had its headers parsed and decoder state built."],["RawAdapter","Adapter around a raw, interleaved, `f32` PCM byte stream."],["YoutubeDl","A lazily instantiated call to download a file, finding its URL via youtube-dl."]],"trait":[["AsyncMediaSource","An async port of symphonia’s `MediaSource`."],["Compose","Data and behaviour required to instantiate a lazy audio source."]]};